1) Dn/Ds analysis on Paland and Lynch data set.
1.1) Fit a homogeneous model, with a single Dn/Ds for all branches:
     
     bppml param=ML.bpp input.tree.file=PalandAndLynch28Tree_unrooted.dnd
     
     This will store optimized parameter in file PalandAndLynch28.params_h.bpp
     and corresponding tree in file              PalandAndLynch28.ml_h.dnd

     A YN98+F3X4 codon substitution model is used.
1.2) Same thing as above, but using the general syntax to specify non-homogeneous models:

     bppml param=ML_NH_1DNDS.bpp

     This will store optimized parameter in file PalandAndLynch28.params_NH_1DNDS.bpp
     and corresponding tree in file              PalandAndLynch28.ml_NH_1DNDS.dnd
     The resulting log-likelihood is -19420.97
     For comparison, codeml from PAML finds -19467.750397


1.3) Same model as Lynch and Paland tried, using 2 models, one for internal branches, one for external branches:
     
     bppml param=ML_NH_2DNDS.bpp

     The resulting log-likelihood is -19394.8

1.4) To try: same model as Paland and Lynch, using 4 models, distinguishing between internal and external branches, and sexual versus asexual lineages.

2) Try to find a better non-homogeneous model to describe the data.
2.1) Cluster nodes using substitution mapping.
     We will map non-synonymous substitutions.

     We try to cluster nodes freely:
     mapnh --noninteractive=yes param=MapNH.bpp test.branch.neighbor=no output.cluster_tree.file=PalandAndLynch.cluster_free.dnd >& mapnh_free.out &

     And also adding the constraint to cluster only adjacent nodes:
     mapnh --noninteractive=yes param=MapNH.bpp test.branch.neighbor=yes output.cluster_tree.file=PalandAndLynch.cluster_join.dnd >& mapnh_join.out &

     This will first create a tree in Nhx format, identical to the input one, but with
     node IDs. It then creates a cluster tree in Newick format, with leaves corresponding to node IDs.

2.2) Use the clustering tree to define partitions, and test them using model testing.
     We test both the clustering with nodes constrained to be adjacent or not in clustering,
     and use two model selection criteria (AIC and BIC):
     
     partnh param=PartNH.bpp --noninteractive=yes\
            input.cluster_tree.file=PalandAndLynch.cluster_free.dnd\
            partition.test=BIC\
            METHOD=free_BIC > partnh_free_BIC.out &

     The resulting likelihood is -19410.5, for 5 clusters

     partnh param=PartNH.bpp --noninteractive=yes\
            input.cluster_tree.file=PalandAndLynch.cluster_join.dnd\
            partition.test=BIC\
            METHOD=join_BIC > partnh_join_BIC.out &

     The resulting likelihood is -19436.6, for 0 cluster


     partnh param=PartNH.bpp --noninteractive=yes\
            input.cluster_tree.file=PalandAndLynch.cluster_free.dnd\
            partition.test=AIC\
            METHOD=free_AIC > partnh_free_AIC.out &
	    
     The resulting likelihood is -19408.2, for 7 clusters

     partnh param=PartNH.bpp --noninteractive=yes\
            input.cluster_tree.file=PalandAndLynch.cluster_join.dnd\
            partition.test=AIC\
            METHOD=join_AIC > partnh_join_AIC.out &

     The resulting likelihood is -19417.4, for 14 clusters


3) Test if the resulting non-homogeneous models take into account the underlying non-homogeneity,
   using the Bowker test against the alternative hypothesis (see Dutheil and Boussau 2008):

     testnh param=TestNH_nonhomogeneous.bpp\
            param=Model_free_BIC.bpp\
            bootstrap.dist_file=TestNH_nonhomogeneous.null_free_BIC.txt\
            input.tree.file=PalandAndLynch.ml_nh_free_BIC.nhx > testnh_nh_free_BIC.out

     testnh param=TestNH_nonhomogeneous.bpp\
            param=Model_join_BIC.bpp\
            bootstrap.dist_file=TestNH_nonhomogeneous.null_join_BIC.txt\
            input.tree.file=PalandAndLynch.ml_nh_join_BIC.nhx > testnh_nh_join_BIC.out

     testnh param=TestNH_nonhomogeneous.bpp\
            param=Model_free_AIC.bpp\
            bootstrap.dist_file=TestNH_nonhomogeneous.null_free_AIC.txt\
            input.tree.file=PalandAndLynch.ml_nh_free_AIC.nhx > testnh_nh_free_AIC.out

     testnh param=TestNH_nonhomogeneous.bpp\
            param=Model_join_AIC.bpp\
            bootstrap.dist_file=TestNH_nonhomogeneous.null_join_AIC.txt\
            input.tree.file=PalandAndLynch.ml_nh_join_AIC.nhx > testnh_nh_join_AIC.out

    All tests are now not significant!




