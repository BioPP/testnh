DATA = MantellidDataset

#Input tree file must be in NHX format, in order to get proper node id.
#MapNH can output such an NHX tree if the input one was in Newick or Nexus.
input.tree.file = $(DATA).nhx

input.cluster_tree.file = Clusters.dnd

#A simple newick tree showing the resulting partitions for visual inspection:
output.partitions.file = Partitions.dnd

###########################################################################
#This (fast) method allows you to output partitions from a given threshold:
###########################################################################
#partition.method = threshold
#partition.threshold = 0.001

###########################################################################
#Alternatively, we can use models comparison to determine the threshold.
#This requires a data set and a model family to be specified, provided
#with the following options:
###########################################################################
partition.method = auto
partition.test = BIC #Can be one of LRT, BIC or AIC.
partition.test.threshold = 0.01 #If LRT is used.
partition.test.stop_condition = 10

alphabet = Codon(letter=DNA, type=InvertebrateMitochondrial)
input.sequence.file = $(DATA).faln
input.sequence.format = Fasta
input.sequence.sites_to_use = all
# Remove stop codons
input.sequence.remove_stop_codons=yes



model = YN98(genetic_code=InvertebrateMitochondrial, frequencies=F3X4, omega=0.5, kappa=2, useObservedFreqs=yes)
rate_distribution = Uniform #Gamma(n=4, alpha=0.5)
nonhomogeneous.root_freq = None 
nonhomogeneous.shared_parameters = YN98.kappa, YN98.freq* 

#How to optimize parameters when fitting models:
optimization.reparametrization = no
optimization.verbose = 1
optimization.max_number_f_eval = 1000
optimization.tolerance = 0.000001
optimization.profiler = $(DATA).$(METHOD).profile
optimization.message_handler = $(DATA).$(METHOD).message

#Where to write optimal model (for later use with bppSeqGen or bppAncestor for instance):
output.model.file = 
output.log.file = 
output.tree.file = $(DATA).ml_nh_$(METHOD).nhx
output.tree.format = NHX
output.partitions.file = $(DATA).partitions_$(METHOD).dnd
output.partitions.record = $(DATA).partitions_record_$(METHOD).txt
output.model.file = $(DATA).model_$(METHOD).bpp
output.log.file = $(DATA).model_$(METHOD).log.txt
output.parameters.file = $(DATA).ml_nh_$(METHOD).parameters.csv
 
